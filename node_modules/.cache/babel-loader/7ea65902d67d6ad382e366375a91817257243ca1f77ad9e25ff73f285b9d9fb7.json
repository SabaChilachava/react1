{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _debug = require('debug');\nvar _debug2 = _interopRequireDefault(_debug);\nvar _FunctionStateMap = require('./FunctionStateMap');\nvar _FunctionStateMap2 = _interopRequireDefault(_FunctionStateMap);\nvar _eventNames = require('./eventNames');\nvar _eventNames2 = _interopRequireDefault(_eventNames);\nvar _functionNames = require('./functionNames');\nvar _functionNames2 = _interopRequireDefault(_functionNames);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/* eslint-disable promise/prefer-await-to-then */\n\nconst debug = (0, _debug2.default)('youtube-player');\nconst YouTubePlayer = {};\n\n/**\n * Construct an object that defines an event handler for all of the YouTube\n * player events. Proxy captured events through an event emitter.\n *\n * @todo Capture event parameters.\n * @see https://developers.google.com/youtube/iframe_api_reference#Events\n */\nYouTubePlayer.proxyEvents = emitter => {\n  const events = {};\n  for (const eventName of _eventNames2.default) {\n    const onEventName = 'on' + eventName.slice(0, 1).toUpperCase() + eventName.slice(1);\n    events[onEventName] = event => {\n      debug('event \"%s\"', onEventName, event);\n      emitter.trigger(eventName, event);\n    };\n  }\n  return events;\n};\n\n/**\n * Delays player API method execution until player state is ready.\n *\n * @todo Proxy all of the methods using Object.keys.\n * @todo See TRICKY below.\n * @param playerAPIReady Promise that resolves when player is ready.\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions.\n * @returns {object}\n */\nYouTubePlayer.promisifyPlayer = function (playerAPIReady) {\n  let strictState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const functions = {};\n  for (const functionName of _functionNames2.default) {\n    if (strictState && _FunctionStateMap2.default[functionName]) {\n      functions[functionName] = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return playerAPIReady.then(player => {\n          const stateInfo = _FunctionStateMap2.default[functionName];\n          const playerState = player.getPlayerState();\n\n          // eslint-disable-next-line no-warning-comments\n          // TODO: Just spread the args into the function once Babel is fixed:\n          // https://github.com/babel/babel/issues/4270\n          //\n          // eslint-disable-next-line prefer-spread\n          const value = player[functionName].apply(player, args);\n\n          // TRICKY: For functions like `seekTo`, a change in state must be\n          // triggered given that the resulting state could match the initial\n          // state.\n          if (stateInfo.stateChangeRequired ||\n          // eslint-disable-next-line no-extra-parens\n          Array.isArray(stateInfo.acceptableStates) && !stateInfo.acceptableStates.includes(playerState)) {\n            return new Promise(resolve => {\n              const onPlayerStateChange = () => {\n                const playerStateAfterChange = player.getPlayerState();\n                let timeout;\n                if (typeof stateInfo.timeout === 'number') {\n                  timeout = setTimeout(() => {\n                    player.removeEventListener('onStateChange', onPlayerStateChange);\n                    resolve();\n                  }, stateInfo.timeout);\n                }\n                if (Array.isArray(stateInfo.acceptableStates) && stateInfo.acceptableStates.includes(playerStateAfterChange)) {\n                  player.removeEventListener('onStateChange', onPlayerStateChange);\n                  clearTimeout(timeout);\n                  resolve();\n                }\n              };\n              player.addEventListener('onStateChange', onPlayerStateChange);\n            }).then(() => {\n              return value;\n            });\n          }\n          return value;\n        });\n      };\n    } else {\n      functions[functionName] = function () {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        return playerAPIReady.then(player => {\n          // eslint-disable-next-line no-warning-comments\n          // TODO: Just spread the args into the function once Babel is fixed:\n          // https://github.com/babel/babel/issues/4270\n          //\n          // eslint-disable-next-line prefer-spread\n          return player[functionName].apply(player, args);\n        });\n      };\n    }\n  }\n  return functions;\n};\nexports.default = YouTubePlayer;\nmodule.exports = exports['default'];","map":{"version":3,"names":["Object","defineProperty","exports","value","_debug","require","_debug2","_interopRequireDefault","_FunctionStateMap","_FunctionStateMap2","_eventNames","_eventNames2","_functionNames","_functionNames2","obj","__esModule","default","debug","YouTubePlayer","proxyEvents","emitter","events","eventName","onEventName","slice","toUpperCase","event","trigger","promisifyPlayer","playerAPIReady","strictState","arguments","length","undefined","functions","functionName","_len","args","Array","_key","then","player","stateInfo","playerState","getPlayerState","apply","stateChangeRequired","isArray","acceptableStates","includes","Promise","resolve","onPlayerStateChange","playerStateAfterChange","timeout","setTimeout","removeEventListener","clearTimeout","addEventListener","_len2","_key2","module"],"sources":["/Users/sabachilachava/code/reactJs/react1/node_modules/youtube-player/dist/YouTubePlayer.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _FunctionStateMap = require('./FunctionStateMap');\n\nvar _FunctionStateMap2 = _interopRequireDefault(_FunctionStateMap);\n\nvar _eventNames = require('./eventNames');\n\nvar _eventNames2 = _interopRequireDefault(_eventNames);\n\nvar _functionNames = require('./functionNames');\n\nvar _functionNames2 = _interopRequireDefault(_functionNames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable promise/prefer-await-to-then */\n\nconst debug = (0, _debug2.default)('youtube-player');\n\nconst YouTubePlayer = {};\n\n/**\n * Construct an object that defines an event handler for all of the YouTube\n * player events. Proxy captured events through an event emitter.\n *\n * @todo Capture event parameters.\n * @see https://developers.google.com/youtube/iframe_api_reference#Events\n */\nYouTubePlayer.proxyEvents = emitter => {\n  const events = {};\n\n  for (const eventName of _eventNames2.default) {\n    const onEventName = 'on' + eventName.slice(0, 1).toUpperCase() + eventName.slice(1);\n\n    events[onEventName] = event => {\n      debug('event \"%s\"', onEventName, event);\n\n      emitter.trigger(eventName, event);\n    };\n  }\n\n  return events;\n};\n\n/**\n * Delays player API method execution until player state is ready.\n *\n * @todo Proxy all of the methods using Object.keys.\n * @todo See TRICKY below.\n * @param playerAPIReady Promise that resolves when player is ready.\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions.\n * @returns {object}\n */\nYouTubePlayer.promisifyPlayer = (playerAPIReady, strictState = false) => {\n  const functions = {};\n\n  for (const functionName of _functionNames2.default) {\n    if (strictState && _FunctionStateMap2.default[functionName]) {\n      functions[functionName] = (...args) => {\n        return playerAPIReady.then(player => {\n          const stateInfo = _FunctionStateMap2.default[functionName];\n          const playerState = player.getPlayerState();\n\n          // eslint-disable-next-line no-warning-comments\n          // TODO: Just spread the args into the function once Babel is fixed:\n          // https://github.com/babel/babel/issues/4270\n          //\n          // eslint-disable-next-line prefer-spread\n          const value = player[functionName].apply(player, args);\n\n          // TRICKY: For functions like `seekTo`, a change in state must be\n          // triggered given that the resulting state could match the initial\n          // state.\n          if (stateInfo.stateChangeRequired ||\n\n          // eslint-disable-next-line no-extra-parens\n          Array.isArray(stateInfo.acceptableStates) && !stateInfo.acceptableStates.includes(playerState)) {\n            return new Promise(resolve => {\n              const onPlayerStateChange = () => {\n                const playerStateAfterChange = player.getPlayerState();\n\n                let timeout;\n\n                if (typeof stateInfo.timeout === 'number') {\n                  timeout = setTimeout(() => {\n                    player.removeEventListener('onStateChange', onPlayerStateChange);\n\n                    resolve();\n                  }, stateInfo.timeout);\n                }\n\n                if (Array.isArray(stateInfo.acceptableStates) && stateInfo.acceptableStates.includes(playerStateAfterChange)) {\n                  player.removeEventListener('onStateChange', onPlayerStateChange);\n\n                  clearTimeout(timeout);\n\n                  resolve();\n                }\n              };\n\n              player.addEventListener('onStateChange', onPlayerStateChange);\n            }).then(() => {\n              return value;\n            });\n          }\n\n          return value;\n        });\n      };\n    } else {\n      functions[functionName] = (...args) => {\n        return playerAPIReady.then(player => {\n          // eslint-disable-next-line no-warning-comments\n          // TODO: Just spread the args into the function once Babel is fixed:\n          // https://github.com/babel/babel/issues/4270\n          //\n          // eslint-disable-next-line prefer-spread\n          return player[functionName].apply(player, args);\n        });\n      };\n    }\n  }\n\n  return functions;\n};\n\nexports.default = YouTubePlayer;\nmodule.exports = exports['default'];"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}